/*
 * This function was put here at opposition to within the scala code because
 * the read operation of the text area content uses cached values in the JS code generated by ScalaJS.
 */
function getBodyWordCount(){
    var contents = $.trim($(".explainer-editor__body-wrapper__input").val())
    return contents.split(" ").length;
}
var maxWordCount = 150;
function updateWordCountDisplay(){
    $(".top-toolbar__word-count-wrapper__count").text(getBodyWordCount())
}
function updateWordCountWarningDisplay() {
    if (getBodyWordCount() > maxWordCount) {
        $(".top-toolbar__word-count-wrapper__warning-outer").show();
    } else {
        $(".top-toolbar__word-count-wrapper__warning-outer").hide();
    }
}
function updateStatusBar(message){
    if(message.length>0){
        $(".top-toolbar__status-bar-wrapper").show();
        $(".top-toolbar__status-bar-inner").text(message);
    }else{
        $(".top-toolbar__status-bar-wrapper").hide();
    }
}

/*
 * This function was put here at opposition to within the scala code because
 * the read operation of the text input uses cached values in the JS code generated by ScalaJS.
 */
function updateCheckboxState() {
    var $this = $(".explainer-editor__displayType-checkbox");
    if ($this.is(':checked')) {
        ExplainEditorJS().setDisplayType(EXPLAINER_IDENTIFIER,"Expandable")
    } else {
        ExplainEditorJS().setDisplayType(EXPLAINER_IDENTIFIER,"Flat")
    }
};

/*
 * Tag Search
 */

function processCapiSearchResponse(response){
    response.results.forEach(function(tag){
        ExplainEditorJS().addTagToSuggestionSet(EXPLAINER_IDENTIFIER,tag.id);
    });
}

$(document).delegate( ".explainer-editor__tags__existing-tags__tag-delete-icon", "click", function() {
    var explainerId = $(this).data("explainer-id");
    var tagId = $(this).data("tag-id");
    ExplainEditorJS().removeTagFromExplainer(explainerId,tagId);
});

/*
 * Generic Functions
 */
function readValueAtDiv(id){
    return $("#"+id).val();
}

function initiateEditor(){
    tinymce.init({
        selector:'#explainer-input-text-area',
        plugins: [
            'link'
        ],
        menu: {
            table: {title: 'Table', items: 'inserttable tableprops deletetable | cell row column'}
        },
        toolbar: 'undo redo | styleselect | bold italic underline bullist, numlist link',
        setup:function(ed) {
            ed.on('change', function(e) {
                var bodyString = ed.getContent();
                ExplainEditorJS().updateBodyContents(EXPLAINER_IDENTIFIER, bodyString)
            });
        }
    });
}

ExplainEditorJS().main(EXPLAINER_IDENTIFIER)

